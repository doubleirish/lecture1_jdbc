<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- this is the toplevel spring config file. -->
  <!-- we broke the configuration down into two parts
      1)  application-related spring config beans in userapp-spring.xml
      2)  datasource (database) related spring config beans in  datasource-production-client.xml

      The reason the configuration is broken up this way is we often want to use a separate datasource(database) for testing during development or qa.
      So, separating out the datasource beans into a separate file allows us to easily swap in and out different datasource config to point to different databases.

      e.g in a test we can load in configuration to connect to a local embedded test database using
      @ContextConfiguration(locations = {"classpath:/userapp-spring.xml", "classpath:/datasource-embedded.xml"})

      e.g or we could connect to a shared development database  using
      @ContextConfiguration(locations = {"classpath:/userapp-spring.xml", "classpath:/datasource-test.xml"})
      -->

  <!-- service , dao beans-->
  <import resource="userapp-spring.xml"/>

  <!-- datasource  related beans        -->
  <import resource="datasource-production-client.xml"/>

</beans>