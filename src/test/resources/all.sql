DROP TABLE PHONE ;
DROP TABLE ADDRESS ;
DROP TABLE USERS ;

CREATE TABLE USERS (
  ID INT   NOT NULL GENERATED by default AS IDENTITY PRIMARY KEY,
  USER_NAME VARCHAR(15) NOT NULL,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  ACTIVE_SINCE DATE
);

ALTER TABLE USERS 
ADD CONSTRAINT users_username_UC UNIQUE (USER_NAME);

INSERT INTO USERS (USER_NAME,   FIRST_NAME, LAST_NAME,  ACTIVE_SINCE)
            values('credmond', 'Conor'  , 'Redmond', '2014-12-31');

INSERT INTO USERS (USER_NAME,   FIRST_NAME, LAST_NAME,  ACTIVE_SINCE)
            values('jsmith', 'John'  ,    'Smith',   '2014-02-28');    


INSERT INTO USERS (USER_NAME,   FIRST_NAME, LAST_NAME,  ACTIVE_SINCE)
            values('pdiddy', 'Puffy'  ,    'Combs',   '2014-07-04');                  

select * from users;   

-- ===================================================
CREATE TABLE ADDRESS (
  USER_ID INT  CONSTRAINT ADDR_USR_FK REFERENCES USERS,
  STREET VARCHAR(255) NOT NULL,
  STREET2 VARCHAR(255)    ,
  CITY VARCHAR(255) NOT NULL,
  STATE VARCHAR(2) NOT NULL,
  ZIP VARCHAR(10) NOT NULL
);  



INSERT INTO ADDRESS (USER_ID,   ZIP,      STATE,  CITY,        STREET )
             values (1,         '98052',  'WA',   'Seattle',    '9999 Belview Ave');     

INSERT INTO ADDRESS (USER_ID,   ZIP,      STATE,  CITY,        STREET )
             values (2,         '98034',  'WA',   'Kirkland',    '123 Main St');   


select * from address;
-- ===================================================
delete  from phone;
CREATE TABLE PHONE (
  USER_ID INT  CONSTRAINT PHONE_USR_FK REFERENCES USERS,
  label VARCHAR(255) ,
  phone VARCHAR(255) NOT NULL  
);  

INSERT INTO PHONE (USER_ID,   LABEL,      PHONE )
           values (1,         'HOME',     '123-555-6789' );  
              
INSERT INTO PHONE (USER_ID,   LABEL,      PHONE )
           values (1,         'CELL',     '555-555-1212' );  


select * from phone;


SELECT u.id, u.user_name, u.first_name ,u.last_name, u.active_since
       , a.street, a.city , a.state , a.zip 
FROM Users u 
LEFT OUTER JOIN Address a on  a.user_Id = u.id 
LEFT OUTER JOIN phone p on  p.user_Id = u.id 
ORDER BY u.id;             


               
       