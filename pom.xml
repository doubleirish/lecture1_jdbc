<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.uw.data</groupId>
  <artifactId>lecture1_jdbc</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>lecture1_jdbc</name>
  <url>http://maven.apache.org</url>
  <description>
 In which we look at raw JDBC calls for queries, inserts, updates and deletes.
 We also look at the equivalent calls using  use the Spring JDBC template API.
 Finally we look at some testing strategies when using stateful databases,
</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>

    </build>

  <dependencies>

      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>4.1.5.RELEASE</version>
      </dependency>

      <!--- spring jdbc template -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>4.1.5.RELEASE</version>
      </dependency>

      <!-- spring -->
      <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>4.1.5.RELEASE</version>
      </dependency>


      <!-- derby JDBC client to standalone server -->
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbyclient</artifactId>
          <version>10.11.1.1</version>
      </dependency>

      <!-- embedded derby database engine and embedded JDBC client -->
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
          <version>10.11.1.1</version>
      </dependency>

      <!-- basic data source -->
      <dependency>
          <groupId>commons-dbcp</groupId>
          <artifactId>commons-dbcp</artifactId>
          <version>1.4</version>
      </dependency>

      <!-- string utils -->
      <dependency>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-lang3</artifactId>
          <version>3.0</version>
      </dependency>



      <!-- log4j-->
      <!--<dependency>-->
          <!--<groupId>log4j</groupId>-->
          <!--<artifactId>log4j</artifactId>-->
          <!--<version>1.2.17</version>-->
      <!--</dependency>-->

      <!--<dependency>-->
          <!--<groupId>commons-logging</groupId>-->
          <!--<artifactId>commons-logging</artifactId>-->
          <!--<version>1.2</version>-->
      <!--</dependency>-->


      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>1.1.2</version>
      </dependency>

       <!--  collection utils etc -->
      <dependency>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
          <version>18.0</version>
      </dependency>




      <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.9</version>
      <scope>test</scope>
    </dependency>

       <!-- testing e.g assertThat(arg, is(greaterThan(7)) -->
      <dependency>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-all</artifactId>
          <version>1.3</version>
      </dependency>



  </dependencies>
</project>
